//                           _       _
// __      _____  __ ___   ___  __ _| |_ ___
// \ \ /\ / / _ \/ _` \ \ / / |/ _` | __/ _ \
//  \ V  V /  __/ (_| |\ V /| | (_| | ||  __/
//   \_/\_/ \___|\__,_| \_/ |_|\__,_|\__\___|
//
//  Copyright Â© 2016 - 2024 Weaviate B.V. All rights reserved.
//
//  CONTACT: hello@weaviate.io
//

// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/weaviate/weaviate/entities/models"
)

// SuspendUserOKCode is the HTTP code returned for type SuspendUserOK
const SuspendUserOKCode int = 200

/*
SuspendUserOK users successfully suspended

swagger:response suspendUserOK
*/
type SuspendUserOK struct {
}

// NewSuspendUserOK creates SuspendUserOK with default headers values
func NewSuspendUserOK() *SuspendUserOK {

	return &SuspendUserOK{}
}

// WriteResponse to the client
func (o *SuspendUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SuspendUserBadRequestCode is the HTTP code returned for type SuspendUserBadRequest
const SuspendUserBadRequestCode int = 400

/*
SuspendUserBadRequest Malformed request.

swagger:response suspendUserBadRequest
*/
type SuspendUserBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSuspendUserBadRequest creates SuspendUserBadRequest with default headers values
func NewSuspendUserBadRequest() *SuspendUserBadRequest {

	return &SuspendUserBadRequest{}
}

// WithPayload adds the payload to the suspend user bad request response
func (o *SuspendUserBadRequest) WithPayload(payload *models.ErrorResponse) *SuspendUserBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suspend user bad request response
func (o *SuspendUserBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuspendUserBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SuspendUserUnauthorizedCode is the HTTP code returned for type SuspendUserUnauthorized
const SuspendUserUnauthorizedCode int = 401

/*
SuspendUserUnauthorized Unauthorized or invalid credentials.

swagger:response suspendUserUnauthorized
*/
type SuspendUserUnauthorized struct {
}

// NewSuspendUserUnauthorized creates SuspendUserUnauthorized with default headers values
func NewSuspendUserUnauthorized() *SuspendUserUnauthorized {

	return &SuspendUserUnauthorized{}
}

// WriteResponse to the client
func (o *SuspendUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

// SuspendUserForbiddenCode is the HTTP code returned for type SuspendUserForbidden
const SuspendUserForbiddenCode int = 403

/*
SuspendUserForbidden Forbidden

swagger:response suspendUserForbidden
*/
type SuspendUserForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSuspendUserForbidden creates SuspendUserForbidden with default headers values
func NewSuspendUserForbidden() *SuspendUserForbidden {

	return &SuspendUserForbidden{}
}

// WithPayload adds the payload to the suspend user forbidden response
func (o *SuspendUserForbidden) WithPayload(payload *models.ErrorResponse) *SuspendUserForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suspend user forbidden response
func (o *SuspendUserForbidden) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuspendUserForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SuspendUserNotFoundCode is the HTTP code returned for type SuspendUserNotFound
const SuspendUserNotFoundCode int = 404

/*
SuspendUserNotFound user not found

swagger:response suspendUserNotFound
*/
type SuspendUserNotFound struct {
}

// NewSuspendUserNotFound creates SuspendUserNotFound with default headers values
func NewSuspendUserNotFound() *SuspendUserNotFound {

	return &SuspendUserNotFound{}
}

// WriteResponse to the client
func (o *SuspendUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// SuspendUserUnprocessableEntityCode is the HTTP code returned for type SuspendUserUnprocessableEntity
const SuspendUserUnprocessableEntityCode int = 422

/*
SuspendUserUnprocessableEntity Request body is well-formed (i.e., syntactically correct), but semantically erroneous. Are you sure the class is defined in the configuration file?

swagger:response suspendUserUnprocessableEntity
*/
type SuspendUserUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSuspendUserUnprocessableEntity creates SuspendUserUnprocessableEntity with default headers values
func NewSuspendUserUnprocessableEntity() *SuspendUserUnprocessableEntity {

	return &SuspendUserUnprocessableEntity{}
}

// WithPayload adds the payload to the suspend user unprocessable entity response
func (o *SuspendUserUnprocessableEntity) WithPayload(payload *models.ErrorResponse) *SuspendUserUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suspend user unprocessable entity response
func (o *SuspendUserUnprocessableEntity) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuspendUserUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SuspendUserInternalServerErrorCode is the HTTP code returned for type SuspendUserInternalServerError
const SuspendUserInternalServerErrorCode int = 500

/*
SuspendUserInternalServerError An error has occurred while trying to fulfill the request. Most likely the ErrorResponse will contain more information about the error.

swagger:response suspendUserInternalServerError
*/
type SuspendUserInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewSuspendUserInternalServerError creates SuspendUserInternalServerError with default headers values
func NewSuspendUserInternalServerError() *SuspendUserInternalServerError {

	return &SuspendUserInternalServerError{}
}

// WithPayload adds the payload to the suspend user internal server error response
func (o *SuspendUserInternalServerError) WithPayload(payload *models.ErrorResponse) *SuspendUserInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the suspend user internal server error response
func (o *SuspendUserInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SuspendUserInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
